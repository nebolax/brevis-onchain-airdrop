{
  "address": "0xeCD9Ce940b5E8EC9bF5Cb9FAcA29CBE67c3d45DA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_brevisRequest",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_vkHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_airdoppingToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Airdropped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airdoppingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_appVkHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_appCircuitOutputs",
          "type": "bytes[]"
        }
      ],
      "name": "brevisBatchCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_appVkHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_appCircuitOutput",
          "type": "bytes"
        }
      ],
      "name": "brevisCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brevisRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "issuedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vkHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x33baca70231ea471494b667976e55bf653d0000295917b675b23d75607219cfc",
  "receipt": {
    "to": null,
    "from": "0xB38Bb847D9dC852B70d9ed539C87cF459812DA16",
    "contractAddress": "0xeCD9Ce940b5E8EC9bF5Cb9FAcA29CBE67c3d45DA",
    "transactionIndex": 90,
    "gasUsed": "416360",
    "logsBloom": "0x
    "blockHash": "0xc0de00d774bd9707f11a873e1808380231cb03d154c95a6b4867436cc8a98baa",
    "transactionHash": "0x33baca70231ea471494b667976e55bf653d0000295917b675b23d75607219cfc",
    "logs": [],
    "blockNumber": 7092614,
    "cumulativeGasUsed": "27435317",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa082F86d9d1660C29cf3f962A31d7D20E367154F",
    "0x03f9041f4c20d53f676bfe1d206378da7fca264546767bf1c685c0c86d731c20",
    "0x65f57e2d8247f4F4Adb4E0beF35801c01eba9dac"
  ],
  "numDeployments": 2,
  "solcInputHash": "387cb1307c6a90f0f4bd1aeb70603d21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brevisRequest\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_vkHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_airdoppingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Airdropped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdoppingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_appVkHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_appCircuitOutputs\",\"type\":\"bytes[]\"}],\"name\":\"brevisBatchCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_appVkHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_appCircuitOutput\",\"type\":\"bytes\"}],\"name\":\"brevisCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brevisRequest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"issuedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vkHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PermissionlessAirdrop.sol\":\"PermissionlessAirdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\",\"keccak256\":\"0x91104f4bcc877f2506e4485b871efe0a6beb5c1ef7de9c374d99d75289905905\",\"license\":\"MIT\"},\"contracts/PermissionlessAirdrop.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"./lib/BrevisAppZkOnly.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\n\\ncontract PermissionlessAirdrop is BrevisAppZkOnly {\\n    bytes32 public immutable vkHash;\\n    address public immutable airdoppingToken;\\n    mapping(address => uint256) public issuedTokens;\\n\\n    event Airdropped(address recipient, address token, uint256 amount);\\n\\n    constructor(\\n        address _brevisRequest,\\n        bytes32 _vkHash,\\n        address _airdoppingToken\\n    ) BrevisAppZkOnly(_brevisRequest) {\\n        vkHash = _vkHash;\\n        airdoppingToken = _airdoppingToken;\\n    }\\n\\n    function handleProofResult(bytes32 _vkHash, bytes calldata _circuitOutput) internal override {\\n        require(vkHash == _vkHash, \\\"invalid vk\\\");\\n        (\\n            address userAddr,\\n            uint256 transferCount,\\n            uint256 totalSent\\n        ) = decodeOutput(_circuitOutput);\\n\\n        // Calculate some airdrop-specific business logic.\\n        // Doing some random calculations here just to demonstrate the possibility of it.\\n        uint256 points = 0;\\n        if (transferCount < 3) points = transferCount;\\n        if (transferCount < 10) points = transferCount * 2;\\n        else points = transferCount * 4;\\n\\n        if (totalSent < 10000000000000000000000) { // total sent < 10k\\n            points += 10;\\n        } else { // total sent > 10k\\n            points += 50;\\n        }\\n\\n        uint256 amount = points * 5 * 1000000000000000000;\\n\\n        IERC20(airdoppingToken).transfer(userAddr, amount);\\n        emit Airdropped(userAddr, airdoppingToken, amount);    \\n    }\\n\\n    function decodeOutput(bytes calldata o) internal pure returns (address, uint256, uint256) {\\n        address userAddr = address(bytes20(o[0:20]));\\n        uint256 transferCount = uint256(uint248(bytes31(o[20:51])));\\n        uint256 totalSent = uint256(uint248(bytes31(o[51:82])));\\n        return (userAddr, transferCount, totalSent);\\n    }\\n}\\n\",\"keccak256\":\"0x6cc9c4a8313ddeae5ab68c121e87a890d0972efb8833df22a434c1d39096f642\",\"license\":\"MIT\"},\"contracts/lib/BrevisAppZkOnly.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\n// App that only accepts ZK-attested results.\\nabstract contract BrevisAppZkOnly {\\n    address public brevisRequest;\\n\\n    modifier onlyBrevisRequest() {\\n        require(msg.sender == brevisRequest, \\\"invalid caller\\\");\\n        _;\\n    }\\n\\n    constructor(address _brevisRequest) {\\n        brevisRequest = _brevisRequest;\\n    }\\n\\n    function handleProofResult(bytes32 _vkHash, bytes calldata _appCircuitOutput) internal virtual {\\n        // to be overrided by custom app\\n    }\\n\\n    function brevisCallback(bytes32 _appVkHash, bytes calldata _appCircuitOutput) external onlyBrevisRequest {\\n        handleProofResult(_appVkHash, _appCircuitOutput);\\n    }\\n\\n    function brevisBatchCallback(\\n        bytes32[] calldata _appVkHashes,\\n        bytes[] calldata _appCircuitOutputs\\n    ) external onlyBrevisRequest {\\n        for (uint i = 0; i < _appVkHashes.length; i++) {\\n            handleProofResult(_appVkHashes[i], _appCircuitOutputs[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87d19d0a3c1544a69a075915b04dd999406664c01566c60c570ef8a4c526faf7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0346100ae57601f6106fb38819003918201601f19168301916001600160401b038311848410176100b3578084926060946040528339810103126100ae57610047816100c9565b906100596040602083015192016100c9565b600080546001600160a01b0319166001600160a01b039094169390931790925560805260a05260405161061d90816100de8239608051818181610172015261032f015260a05181818161013601526104210152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100ae5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816338931a3114610288575080633bca02fc146101955780634fe840f51461015a57806376bf34041461011657806379d6b6a2146100a05763a0b498a41461006557600080fd5b3461009c57602036600319011261009c57356001600160a01b03811680910361009c57828291602094526001845220549051908152f35b8280fd5b50903461009c57366003190112610112576024359067ffffffffffffffff9081831161010e573660238401121561010e578281013591821161010e57366024838501011161010e57602461010b936101036001600160a01b0387541633146102e1565b01903561032d565b80f35b8380fd5b5080fd5b505034610112578160031936011261011257602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b505034610112578160031936011261011257602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50903461009c573660031901126101125767ffffffffffffffff90803582811161010e576101c690369083016102ab565b9190926024938435828111610284576101e290369085016102ab565b906101f86001600160a01b0389541633146102e1565b875b868110610205578880f35b8060051b838210156102725780830135601e198436030181121561026e57830180359087821161026a57602001813603811361026a576102479287013561032d565b6000198114610258576001016101fa565b634e487b7160e01b8952601186528789fd5b8b80fd5b8a80fd5b634e487b7160e01b8a5260328752888afd5b8680fd5b8490346101125781600319360112610112576001600160a01b0360209254168152f35b9181601f840112156102dc5782359167ffffffffffffffff83116102dc576020808501948460051b0101116102dc57565b600080fd5b156102e857565b60405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642063616c6c65720000000000000000000000000000000000006044820152606490fd5b7f0000000000000000000000000000000000000000000000000000000000000000036105a257816014116102dc57803560601c91806033116102dc5760148201358060081c916052116102dc57600090600a831015610544577f01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe915060071c16908082046002149015171561051d57603369021e19e0c9bab240000091925b013560081c101561053357600a810180911161051d57905b60058202918083046005148115171561051d57674563918244f400000291808304670de0b6b3a7640000149015171561051d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660405163a9059cbb60e01b81528260048201528360248201526020816044816000865af18015610511576104aa575b50907f6338f69390e35a535a8a45841594668201ebcd1a8d9561f38ae0e589140233bf9260609260405192835260208301526040820152a1565b60209291923d811161050a575b601f8101601f1916820167ffffffffffffffff8111838210176104f4576020918391604052810103126102dc5751801515036102dc579038610470565b634e487b7160e01b600052604160045260246000fd5b503d6104b7565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b6032810180911161051d57906103e4565b7f03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060061c16918083046004149015171561058e5750603369021e19e0c9bab240000091926103cc565b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152600a60248201527f696e76616c696420766b000000000000000000000000000000000000000000006044820152606490fdfea264697066735822122091e73caf59b0608c37df83168404d855010c8d30f2841868b385789d4638189064736f6c63430008140033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816338931a3114610288575080633bca02fc146101955780634fe840f51461015a57806376bf34041461011657806379d6b6a2146100a05763a0b498a41461006557600080fd5b3461009c57602036600319011261009c57356001600160a01b03811680910361009c57828291602094526001845220549051908152f35b8280fd5b50903461009c57366003190112610112576024359067ffffffffffffffff9081831161010e573660238401121561010e578281013591821161010e57366024838501011161010e57602461010b936101036001600160a01b0387541633146102e1565b01903561032d565b80f35b8380fd5b5080fd5b505034610112578160031936011261011257602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b505034610112578160031936011261011257602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50903461009c573660031901126101125767ffffffffffffffff90803582811161010e576101c690369083016102ab565b9190926024938435828111610284576101e290369085016102ab565b906101f86001600160a01b0389541633146102e1565b875b868110610205578880f35b8060051b838210156102725780830135601e198436030181121561026e57830180359087821161026a57602001813603811361026a576102479287013561032d565b6000198114610258576001016101fa565b634e487b7160e01b8952601186528789fd5b8b80fd5b8a80fd5b634e487b7160e01b8a5260328752888afd5b8680fd5b8490346101125781600319360112610112576001600160a01b0360209254168152f35b9181601f840112156102dc5782359167ffffffffffffffff83116102dc576020808501948460051b0101116102dc57565b600080fd5b156102e857565b60405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642063616c6c65720000000000000000000000000000000000006044820152606490fd5b7f0000000000000000000000000000000000000000000000000000000000000000036105a257816014116102dc57803560601c91806033116102dc5760148201358060081c916052116102dc57600090600a831015610544577f01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe915060071c16908082046002149015171561051d57603369021e19e0c9bab240000091925b013560081c101561053357600a810180911161051d57905b60058202918083046005148115171561051d57674563918244f400000291808304670de0b6b3a7640000149015171561051d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660405163a9059cbb60e01b81528260048201528360248201526020816044816000865af18015610511576104aa575b50907f6338f69390e35a535a8a45841594668201ebcd1a8d9561f38ae0e589140233bf9260609260405192835260208301526040820152a1565b60209291923d811161050a575b601f8101601f1916820167ffffffffffffffff8111838210176104f4576020918391604052810103126102dc5751801515036102dc579038610470565b634e487b7160e01b600052604160045260246000fd5b503d6104b7565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b6032810180911161051d57906103e4565b7f03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060061c16918083046004149015171561058e5750603369021e19e0c9bab240000091926103cc565b634e487b7160e01b81526011600452602490fd5b60405162461bcd60e51b815260206004820152600a60248201527f696e76616c696420766b000000000000000000000000000000000000000000006044820152606490fdfea264697066735822122091e73caf59b0608c37df83168404d855010c8d30f2841868b385789d4638189064736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1380,
        "contract": "contracts/PermissionlessAirdrop.sol:PermissionlessAirdrop",
        "label": "brevisRequest",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 877,
        "contract": "contracts/PermissionlessAirdrop.sol:PermissionlessAirdrop",
        "label": "issuedTokens",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}